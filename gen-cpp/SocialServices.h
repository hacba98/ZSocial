/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef SocialServices_H
#define SocialServices_H

#include <thrift/TDispatchProcessor.h>
#include <thrift/async/TConcurrentClientSyncInfo.h>
#include "SocialServices_types.h"



#ifdef _WIN32
  #pragma warning( push )
  #pragma warning (disable : 4250 ) //inheriting methods via dominance 
#endif

class SocialServicesIf {
 public:
  virtual ~SocialServicesIf() {}
  virtual int32_t Login(const std::string& username, const std::string& password) = 0;
  virtual ErrorCode::type Logout(const int32_t userId) = 0;
  virtual void CreateProfile(CreateUserResult& _return, const UserProfile& profile) = 0;
  virtual void GetProfile(GetUserResult& _return, const int32_t userId) = 0;
  virtual ErrorCode::type UpdateProfile(const UserProfile& profile, const int32_t userId) = 0;
  virtual ErrorCode::type DeleteProfile(const int32_t userId) = 0;
  virtual void ansyCreateProfile(CreateUserResult& _return, const UserProfile& profile) = 0;
  virtual ErrorCode::type ansyUpdateProfile(const UserProfile& profile, const int32_t userId) = 0;
  virtual ErrorCode::type ansyDeleteProfile(const int32_t userId) = 0;
  virtual void getList(ListProfileResult& _return, const std::vector<int32_t> & ids) = 0;
  virtual int32_t GetIdByName(const std::string& username) = 0;
  virtual void checkRequest(pingResult& _return, const int32_t id) = 0;
  virtual ErrorCode::type addFriend(const FriendRequest& request) = 0;
  virtual ErrorCode::type acceptRequest(const int32_t curId, const int32_t requestId) = 0;
  virtual ErrorCode::type declineRequest(const int32_t curId, const int32_t requestId) = 0;
  virtual ErrorCode::type removeFriend(const int32_t curId, const int32_t friendId) = 0;
  virtual void viewFriendList(listFriendResult& _return, const int32_t id, const int32_t index, const int32_t size) = 0;
};

class SocialServicesIfFactory {
 public:
  typedef SocialServicesIf Handler;

  virtual ~SocialServicesIfFactory() {}

  virtual SocialServicesIf* getHandler(const ::apache::thrift::TConnectionInfo& connInfo) = 0;
  virtual void releaseHandler(SocialServicesIf* /* handler */) = 0;
};

class SocialServicesIfSingletonFactory : virtual public SocialServicesIfFactory {
 public:
  SocialServicesIfSingletonFactory(const boost::shared_ptr<SocialServicesIf>& iface) : iface_(iface) {}
  virtual ~SocialServicesIfSingletonFactory() {}

  virtual SocialServicesIf* getHandler(const ::apache::thrift::TConnectionInfo&) {
    return iface_.get();
  }
  virtual void releaseHandler(SocialServicesIf* /* handler */) {}

 protected:
  boost::shared_ptr<SocialServicesIf> iface_;
};

class SocialServicesNull : virtual public SocialServicesIf {
 public:
  virtual ~SocialServicesNull() {}
  int32_t Login(const std::string& /* username */, const std::string& /* password */) {
    int32_t _return = 0;
    return _return;
  }
  ErrorCode::type Logout(const int32_t /* userId */) {
    ErrorCode::type _return = (ErrorCode::type)0;
    return _return;
  }
  void CreateProfile(CreateUserResult& /* _return */, const UserProfile& /* profile */) {
    return;
  }
  void GetProfile(GetUserResult& /* _return */, const int32_t /* userId */) {
    return;
  }
  ErrorCode::type UpdateProfile(const UserProfile& /* profile */, const int32_t /* userId */) {
    ErrorCode::type _return = (ErrorCode::type)0;
    return _return;
  }
  ErrorCode::type DeleteProfile(const int32_t /* userId */) {
    ErrorCode::type _return = (ErrorCode::type)0;
    return _return;
  }
  void ansyCreateProfile(CreateUserResult& /* _return */, const UserProfile& /* profile */) {
    return;
  }
  ErrorCode::type ansyUpdateProfile(const UserProfile& /* profile */, const int32_t /* userId */) {
    ErrorCode::type _return = (ErrorCode::type)0;
    return _return;
  }
  ErrorCode::type ansyDeleteProfile(const int32_t /* userId */) {
    ErrorCode::type _return = (ErrorCode::type)0;
    return _return;
  }
  void getList(ListProfileResult& /* _return */, const std::vector<int32_t> & /* ids */) {
    return;
  }
  int32_t GetIdByName(const std::string& /* username */) {
    int32_t _return = 0;
    return _return;
  }
  void checkRequest(pingResult& /* _return */, const int32_t /* id */) {
    return;
  }
  ErrorCode::type addFriend(const FriendRequest& /* request */) {
    ErrorCode::type _return = (ErrorCode::type)0;
    return _return;
  }
  ErrorCode::type acceptRequest(const int32_t /* curId */, const int32_t /* requestId */) {
    ErrorCode::type _return = (ErrorCode::type)0;
    return _return;
  }
  ErrorCode::type declineRequest(const int32_t /* curId */, const int32_t /* requestId */) {
    ErrorCode::type _return = (ErrorCode::type)0;
    return _return;
  }
  ErrorCode::type removeFriend(const int32_t /* curId */, const int32_t /* friendId */) {
    ErrorCode::type _return = (ErrorCode::type)0;
    return _return;
  }
  void viewFriendList(listFriendResult& /* _return */, const int32_t /* id */, const int32_t /* index */, const int32_t /* size */) {
    return;
  }
};

typedef struct _SocialServices_Login_args__isset {
  _SocialServices_Login_args__isset() : username(false), password(false) {}
  bool username :1;
  bool password :1;
} _SocialServices_Login_args__isset;

class SocialServices_Login_args {
 public:

  SocialServices_Login_args(const SocialServices_Login_args&);
  SocialServices_Login_args& operator=(const SocialServices_Login_args&);
  SocialServices_Login_args() : username(), password() {
  }

  virtual ~SocialServices_Login_args() throw();
  std::string username;
  std::string password;

  _SocialServices_Login_args__isset __isset;

  void __set_username(const std::string& val);

  void __set_password(const std::string& val);

  bool operator == (const SocialServices_Login_args & rhs) const
  {
    if (!(username == rhs.username))
      return false;
    if (!(password == rhs.password))
      return false;
    return true;
  }
  bool operator != (const SocialServices_Login_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_Login_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialServices_Login_pargs {
 public:


  virtual ~SocialServices_Login_pargs() throw();
  const std::string* username;
  const std::string* password;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_Login_result__isset {
  _SocialServices_Login_result__isset() : success(false) {}
  bool success :1;
} _SocialServices_Login_result__isset;

class SocialServices_Login_result {
 public:

  SocialServices_Login_result(const SocialServices_Login_result&);
  SocialServices_Login_result& operator=(const SocialServices_Login_result&);
  SocialServices_Login_result() : success(0) {
  }

  virtual ~SocialServices_Login_result() throw();
  int32_t success;

  _SocialServices_Login_result__isset __isset;

  void __set_success(const int32_t val);

  bool operator == (const SocialServices_Login_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const SocialServices_Login_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_Login_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_Login_presult__isset {
  _SocialServices_Login_presult__isset() : success(false) {}
  bool success :1;
} _SocialServices_Login_presult__isset;

class SocialServices_Login_presult {
 public:


  virtual ~SocialServices_Login_presult() throw();
  int32_t* success;

  _SocialServices_Login_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SocialServices_Logout_args__isset {
  _SocialServices_Logout_args__isset() : userId(false) {}
  bool userId :1;
} _SocialServices_Logout_args__isset;

class SocialServices_Logout_args {
 public:

  SocialServices_Logout_args(const SocialServices_Logout_args&);
  SocialServices_Logout_args& operator=(const SocialServices_Logout_args&);
  SocialServices_Logout_args() : userId(0) {
  }

  virtual ~SocialServices_Logout_args() throw();
  int32_t userId;

  _SocialServices_Logout_args__isset __isset;

  void __set_userId(const int32_t val);

  bool operator == (const SocialServices_Logout_args & rhs) const
  {
    if (!(userId == rhs.userId))
      return false;
    return true;
  }
  bool operator != (const SocialServices_Logout_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_Logout_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialServices_Logout_pargs {
 public:


  virtual ~SocialServices_Logout_pargs() throw();
  const int32_t* userId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_Logout_result__isset {
  _SocialServices_Logout_result__isset() : success(false) {}
  bool success :1;
} _SocialServices_Logout_result__isset;

class SocialServices_Logout_result {
 public:

  SocialServices_Logout_result(const SocialServices_Logout_result&);
  SocialServices_Logout_result& operator=(const SocialServices_Logout_result&);
  SocialServices_Logout_result() : success((ErrorCode::type)0) {
  }

  virtual ~SocialServices_Logout_result() throw();
  ErrorCode::type success;

  _SocialServices_Logout_result__isset __isset;

  void __set_success(const ErrorCode::type val);

  bool operator == (const SocialServices_Logout_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const SocialServices_Logout_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_Logout_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_Logout_presult__isset {
  _SocialServices_Logout_presult__isset() : success(false) {}
  bool success :1;
} _SocialServices_Logout_presult__isset;

class SocialServices_Logout_presult {
 public:


  virtual ~SocialServices_Logout_presult() throw();
  ErrorCode::type* success;

  _SocialServices_Logout_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SocialServices_CreateProfile_args__isset {
  _SocialServices_CreateProfile_args__isset() : profile(false) {}
  bool profile :1;
} _SocialServices_CreateProfile_args__isset;

class SocialServices_CreateProfile_args {
 public:

  SocialServices_CreateProfile_args(const SocialServices_CreateProfile_args&);
  SocialServices_CreateProfile_args& operator=(const SocialServices_CreateProfile_args&);
  SocialServices_CreateProfile_args() {
  }

  virtual ~SocialServices_CreateProfile_args() throw();
  UserProfile profile;

  _SocialServices_CreateProfile_args__isset __isset;

  void __set_profile(const UserProfile& val);

  bool operator == (const SocialServices_CreateProfile_args & rhs) const
  {
    if (!(profile == rhs.profile))
      return false;
    return true;
  }
  bool operator != (const SocialServices_CreateProfile_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_CreateProfile_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialServices_CreateProfile_pargs {
 public:


  virtual ~SocialServices_CreateProfile_pargs() throw();
  const UserProfile* profile;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_CreateProfile_result__isset {
  _SocialServices_CreateProfile_result__isset() : success(false) {}
  bool success :1;
} _SocialServices_CreateProfile_result__isset;

class SocialServices_CreateProfile_result {
 public:

  SocialServices_CreateProfile_result(const SocialServices_CreateProfile_result&);
  SocialServices_CreateProfile_result& operator=(const SocialServices_CreateProfile_result&);
  SocialServices_CreateProfile_result() {
  }

  virtual ~SocialServices_CreateProfile_result() throw();
  CreateUserResult success;

  _SocialServices_CreateProfile_result__isset __isset;

  void __set_success(const CreateUserResult& val);

  bool operator == (const SocialServices_CreateProfile_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const SocialServices_CreateProfile_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_CreateProfile_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_CreateProfile_presult__isset {
  _SocialServices_CreateProfile_presult__isset() : success(false) {}
  bool success :1;
} _SocialServices_CreateProfile_presult__isset;

class SocialServices_CreateProfile_presult {
 public:


  virtual ~SocialServices_CreateProfile_presult() throw();
  CreateUserResult* success;

  _SocialServices_CreateProfile_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SocialServices_GetProfile_args__isset {
  _SocialServices_GetProfile_args__isset() : userId(false) {}
  bool userId :1;
} _SocialServices_GetProfile_args__isset;

class SocialServices_GetProfile_args {
 public:

  SocialServices_GetProfile_args(const SocialServices_GetProfile_args&);
  SocialServices_GetProfile_args& operator=(const SocialServices_GetProfile_args&);
  SocialServices_GetProfile_args() : userId(0) {
  }

  virtual ~SocialServices_GetProfile_args() throw();
  int32_t userId;

  _SocialServices_GetProfile_args__isset __isset;

  void __set_userId(const int32_t val);

  bool operator == (const SocialServices_GetProfile_args & rhs) const
  {
    if (!(userId == rhs.userId))
      return false;
    return true;
  }
  bool operator != (const SocialServices_GetProfile_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_GetProfile_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialServices_GetProfile_pargs {
 public:


  virtual ~SocialServices_GetProfile_pargs() throw();
  const int32_t* userId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_GetProfile_result__isset {
  _SocialServices_GetProfile_result__isset() : success(false) {}
  bool success :1;
} _SocialServices_GetProfile_result__isset;

class SocialServices_GetProfile_result {
 public:

  SocialServices_GetProfile_result(const SocialServices_GetProfile_result&);
  SocialServices_GetProfile_result& operator=(const SocialServices_GetProfile_result&);
  SocialServices_GetProfile_result() {
  }

  virtual ~SocialServices_GetProfile_result() throw();
  GetUserResult success;

  _SocialServices_GetProfile_result__isset __isset;

  void __set_success(const GetUserResult& val);

  bool operator == (const SocialServices_GetProfile_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const SocialServices_GetProfile_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_GetProfile_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_GetProfile_presult__isset {
  _SocialServices_GetProfile_presult__isset() : success(false) {}
  bool success :1;
} _SocialServices_GetProfile_presult__isset;

class SocialServices_GetProfile_presult {
 public:


  virtual ~SocialServices_GetProfile_presult() throw();
  GetUserResult* success;

  _SocialServices_GetProfile_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SocialServices_UpdateProfile_args__isset {
  _SocialServices_UpdateProfile_args__isset() : profile(false), userId(false) {}
  bool profile :1;
  bool userId :1;
} _SocialServices_UpdateProfile_args__isset;

class SocialServices_UpdateProfile_args {
 public:

  SocialServices_UpdateProfile_args(const SocialServices_UpdateProfile_args&);
  SocialServices_UpdateProfile_args& operator=(const SocialServices_UpdateProfile_args&);
  SocialServices_UpdateProfile_args() : userId(0) {
  }

  virtual ~SocialServices_UpdateProfile_args() throw();
  UserProfile profile;
  int32_t userId;

  _SocialServices_UpdateProfile_args__isset __isset;

  void __set_profile(const UserProfile& val);

  void __set_userId(const int32_t val);

  bool operator == (const SocialServices_UpdateProfile_args & rhs) const
  {
    if (!(profile == rhs.profile))
      return false;
    if (!(userId == rhs.userId))
      return false;
    return true;
  }
  bool operator != (const SocialServices_UpdateProfile_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_UpdateProfile_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialServices_UpdateProfile_pargs {
 public:


  virtual ~SocialServices_UpdateProfile_pargs() throw();
  const UserProfile* profile;
  const int32_t* userId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_UpdateProfile_result__isset {
  _SocialServices_UpdateProfile_result__isset() : success(false) {}
  bool success :1;
} _SocialServices_UpdateProfile_result__isset;

class SocialServices_UpdateProfile_result {
 public:

  SocialServices_UpdateProfile_result(const SocialServices_UpdateProfile_result&);
  SocialServices_UpdateProfile_result& operator=(const SocialServices_UpdateProfile_result&);
  SocialServices_UpdateProfile_result() : success((ErrorCode::type)0) {
  }

  virtual ~SocialServices_UpdateProfile_result() throw();
  ErrorCode::type success;

  _SocialServices_UpdateProfile_result__isset __isset;

  void __set_success(const ErrorCode::type val);

  bool operator == (const SocialServices_UpdateProfile_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const SocialServices_UpdateProfile_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_UpdateProfile_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_UpdateProfile_presult__isset {
  _SocialServices_UpdateProfile_presult__isset() : success(false) {}
  bool success :1;
} _SocialServices_UpdateProfile_presult__isset;

class SocialServices_UpdateProfile_presult {
 public:


  virtual ~SocialServices_UpdateProfile_presult() throw();
  ErrorCode::type* success;

  _SocialServices_UpdateProfile_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SocialServices_DeleteProfile_args__isset {
  _SocialServices_DeleteProfile_args__isset() : userId(false) {}
  bool userId :1;
} _SocialServices_DeleteProfile_args__isset;

class SocialServices_DeleteProfile_args {
 public:

  SocialServices_DeleteProfile_args(const SocialServices_DeleteProfile_args&);
  SocialServices_DeleteProfile_args& operator=(const SocialServices_DeleteProfile_args&);
  SocialServices_DeleteProfile_args() : userId(0) {
  }

  virtual ~SocialServices_DeleteProfile_args() throw();
  int32_t userId;

  _SocialServices_DeleteProfile_args__isset __isset;

  void __set_userId(const int32_t val);

  bool operator == (const SocialServices_DeleteProfile_args & rhs) const
  {
    if (!(userId == rhs.userId))
      return false;
    return true;
  }
  bool operator != (const SocialServices_DeleteProfile_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_DeleteProfile_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialServices_DeleteProfile_pargs {
 public:


  virtual ~SocialServices_DeleteProfile_pargs() throw();
  const int32_t* userId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_DeleteProfile_result__isset {
  _SocialServices_DeleteProfile_result__isset() : success(false) {}
  bool success :1;
} _SocialServices_DeleteProfile_result__isset;

class SocialServices_DeleteProfile_result {
 public:

  SocialServices_DeleteProfile_result(const SocialServices_DeleteProfile_result&);
  SocialServices_DeleteProfile_result& operator=(const SocialServices_DeleteProfile_result&);
  SocialServices_DeleteProfile_result() : success((ErrorCode::type)0) {
  }

  virtual ~SocialServices_DeleteProfile_result() throw();
  ErrorCode::type success;

  _SocialServices_DeleteProfile_result__isset __isset;

  void __set_success(const ErrorCode::type val);

  bool operator == (const SocialServices_DeleteProfile_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const SocialServices_DeleteProfile_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_DeleteProfile_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_DeleteProfile_presult__isset {
  _SocialServices_DeleteProfile_presult__isset() : success(false) {}
  bool success :1;
} _SocialServices_DeleteProfile_presult__isset;

class SocialServices_DeleteProfile_presult {
 public:


  virtual ~SocialServices_DeleteProfile_presult() throw();
  ErrorCode::type* success;

  _SocialServices_DeleteProfile_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SocialServices_ansyCreateProfile_args__isset {
  _SocialServices_ansyCreateProfile_args__isset() : profile(false) {}
  bool profile :1;
} _SocialServices_ansyCreateProfile_args__isset;

class SocialServices_ansyCreateProfile_args {
 public:

  SocialServices_ansyCreateProfile_args(const SocialServices_ansyCreateProfile_args&);
  SocialServices_ansyCreateProfile_args& operator=(const SocialServices_ansyCreateProfile_args&);
  SocialServices_ansyCreateProfile_args() {
  }

  virtual ~SocialServices_ansyCreateProfile_args() throw();
  UserProfile profile;

  _SocialServices_ansyCreateProfile_args__isset __isset;

  void __set_profile(const UserProfile& val);

  bool operator == (const SocialServices_ansyCreateProfile_args & rhs) const
  {
    if (!(profile == rhs.profile))
      return false;
    return true;
  }
  bool operator != (const SocialServices_ansyCreateProfile_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_ansyCreateProfile_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialServices_ansyCreateProfile_pargs {
 public:


  virtual ~SocialServices_ansyCreateProfile_pargs() throw();
  const UserProfile* profile;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_ansyCreateProfile_result__isset {
  _SocialServices_ansyCreateProfile_result__isset() : success(false) {}
  bool success :1;
} _SocialServices_ansyCreateProfile_result__isset;

class SocialServices_ansyCreateProfile_result {
 public:

  SocialServices_ansyCreateProfile_result(const SocialServices_ansyCreateProfile_result&);
  SocialServices_ansyCreateProfile_result& operator=(const SocialServices_ansyCreateProfile_result&);
  SocialServices_ansyCreateProfile_result() {
  }

  virtual ~SocialServices_ansyCreateProfile_result() throw();
  CreateUserResult success;

  _SocialServices_ansyCreateProfile_result__isset __isset;

  void __set_success(const CreateUserResult& val);

  bool operator == (const SocialServices_ansyCreateProfile_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const SocialServices_ansyCreateProfile_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_ansyCreateProfile_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_ansyCreateProfile_presult__isset {
  _SocialServices_ansyCreateProfile_presult__isset() : success(false) {}
  bool success :1;
} _SocialServices_ansyCreateProfile_presult__isset;

class SocialServices_ansyCreateProfile_presult {
 public:


  virtual ~SocialServices_ansyCreateProfile_presult() throw();
  CreateUserResult* success;

  _SocialServices_ansyCreateProfile_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SocialServices_ansyUpdateProfile_args__isset {
  _SocialServices_ansyUpdateProfile_args__isset() : profile(false), userId(false) {}
  bool profile :1;
  bool userId :1;
} _SocialServices_ansyUpdateProfile_args__isset;

class SocialServices_ansyUpdateProfile_args {
 public:

  SocialServices_ansyUpdateProfile_args(const SocialServices_ansyUpdateProfile_args&);
  SocialServices_ansyUpdateProfile_args& operator=(const SocialServices_ansyUpdateProfile_args&);
  SocialServices_ansyUpdateProfile_args() : userId(0) {
  }

  virtual ~SocialServices_ansyUpdateProfile_args() throw();
  UserProfile profile;
  int32_t userId;

  _SocialServices_ansyUpdateProfile_args__isset __isset;

  void __set_profile(const UserProfile& val);

  void __set_userId(const int32_t val);

  bool operator == (const SocialServices_ansyUpdateProfile_args & rhs) const
  {
    if (!(profile == rhs.profile))
      return false;
    if (!(userId == rhs.userId))
      return false;
    return true;
  }
  bool operator != (const SocialServices_ansyUpdateProfile_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_ansyUpdateProfile_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialServices_ansyUpdateProfile_pargs {
 public:


  virtual ~SocialServices_ansyUpdateProfile_pargs() throw();
  const UserProfile* profile;
  const int32_t* userId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_ansyUpdateProfile_result__isset {
  _SocialServices_ansyUpdateProfile_result__isset() : success(false) {}
  bool success :1;
} _SocialServices_ansyUpdateProfile_result__isset;

class SocialServices_ansyUpdateProfile_result {
 public:

  SocialServices_ansyUpdateProfile_result(const SocialServices_ansyUpdateProfile_result&);
  SocialServices_ansyUpdateProfile_result& operator=(const SocialServices_ansyUpdateProfile_result&);
  SocialServices_ansyUpdateProfile_result() : success((ErrorCode::type)0) {
  }

  virtual ~SocialServices_ansyUpdateProfile_result() throw();
  ErrorCode::type success;

  _SocialServices_ansyUpdateProfile_result__isset __isset;

  void __set_success(const ErrorCode::type val);

  bool operator == (const SocialServices_ansyUpdateProfile_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const SocialServices_ansyUpdateProfile_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_ansyUpdateProfile_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_ansyUpdateProfile_presult__isset {
  _SocialServices_ansyUpdateProfile_presult__isset() : success(false) {}
  bool success :1;
} _SocialServices_ansyUpdateProfile_presult__isset;

class SocialServices_ansyUpdateProfile_presult {
 public:


  virtual ~SocialServices_ansyUpdateProfile_presult() throw();
  ErrorCode::type* success;

  _SocialServices_ansyUpdateProfile_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SocialServices_ansyDeleteProfile_args__isset {
  _SocialServices_ansyDeleteProfile_args__isset() : userId(false) {}
  bool userId :1;
} _SocialServices_ansyDeleteProfile_args__isset;

class SocialServices_ansyDeleteProfile_args {
 public:

  SocialServices_ansyDeleteProfile_args(const SocialServices_ansyDeleteProfile_args&);
  SocialServices_ansyDeleteProfile_args& operator=(const SocialServices_ansyDeleteProfile_args&);
  SocialServices_ansyDeleteProfile_args() : userId(0) {
  }

  virtual ~SocialServices_ansyDeleteProfile_args() throw();
  int32_t userId;

  _SocialServices_ansyDeleteProfile_args__isset __isset;

  void __set_userId(const int32_t val);

  bool operator == (const SocialServices_ansyDeleteProfile_args & rhs) const
  {
    if (!(userId == rhs.userId))
      return false;
    return true;
  }
  bool operator != (const SocialServices_ansyDeleteProfile_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_ansyDeleteProfile_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialServices_ansyDeleteProfile_pargs {
 public:


  virtual ~SocialServices_ansyDeleteProfile_pargs() throw();
  const int32_t* userId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_ansyDeleteProfile_result__isset {
  _SocialServices_ansyDeleteProfile_result__isset() : success(false) {}
  bool success :1;
} _SocialServices_ansyDeleteProfile_result__isset;

class SocialServices_ansyDeleteProfile_result {
 public:

  SocialServices_ansyDeleteProfile_result(const SocialServices_ansyDeleteProfile_result&);
  SocialServices_ansyDeleteProfile_result& operator=(const SocialServices_ansyDeleteProfile_result&);
  SocialServices_ansyDeleteProfile_result() : success((ErrorCode::type)0) {
  }

  virtual ~SocialServices_ansyDeleteProfile_result() throw();
  ErrorCode::type success;

  _SocialServices_ansyDeleteProfile_result__isset __isset;

  void __set_success(const ErrorCode::type val);

  bool operator == (const SocialServices_ansyDeleteProfile_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const SocialServices_ansyDeleteProfile_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_ansyDeleteProfile_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_ansyDeleteProfile_presult__isset {
  _SocialServices_ansyDeleteProfile_presult__isset() : success(false) {}
  bool success :1;
} _SocialServices_ansyDeleteProfile_presult__isset;

class SocialServices_ansyDeleteProfile_presult {
 public:


  virtual ~SocialServices_ansyDeleteProfile_presult() throw();
  ErrorCode::type* success;

  _SocialServices_ansyDeleteProfile_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SocialServices_getList_args__isset {
  _SocialServices_getList_args__isset() : ids(false) {}
  bool ids :1;
} _SocialServices_getList_args__isset;

class SocialServices_getList_args {
 public:

  SocialServices_getList_args(const SocialServices_getList_args&);
  SocialServices_getList_args& operator=(const SocialServices_getList_args&);
  SocialServices_getList_args() {
  }

  virtual ~SocialServices_getList_args() throw();
  std::vector<int32_t>  ids;

  _SocialServices_getList_args__isset __isset;

  void __set_ids(const std::vector<int32_t> & val);

  bool operator == (const SocialServices_getList_args & rhs) const
  {
    if (!(ids == rhs.ids))
      return false;
    return true;
  }
  bool operator != (const SocialServices_getList_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_getList_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialServices_getList_pargs {
 public:


  virtual ~SocialServices_getList_pargs() throw();
  const std::vector<int32_t> * ids;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_getList_result__isset {
  _SocialServices_getList_result__isset() : success(false) {}
  bool success :1;
} _SocialServices_getList_result__isset;

class SocialServices_getList_result {
 public:

  SocialServices_getList_result(const SocialServices_getList_result&);
  SocialServices_getList_result& operator=(const SocialServices_getList_result&);
  SocialServices_getList_result() {
  }

  virtual ~SocialServices_getList_result() throw();
  ListProfileResult success;

  _SocialServices_getList_result__isset __isset;

  void __set_success(const ListProfileResult& val);

  bool operator == (const SocialServices_getList_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const SocialServices_getList_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_getList_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_getList_presult__isset {
  _SocialServices_getList_presult__isset() : success(false) {}
  bool success :1;
} _SocialServices_getList_presult__isset;

class SocialServices_getList_presult {
 public:


  virtual ~SocialServices_getList_presult() throw();
  ListProfileResult* success;

  _SocialServices_getList_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SocialServices_GetIdByName_args__isset {
  _SocialServices_GetIdByName_args__isset() : username(false) {}
  bool username :1;
} _SocialServices_GetIdByName_args__isset;

class SocialServices_GetIdByName_args {
 public:

  SocialServices_GetIdByName_args(const SocialServices_GetIdByName_args&);
  SocialServices_GetIdByName_args& operator=(const SocialServices_GetIdByName_args&);
  SocialServices_GetIdByName_args() : username() {
  }

  virtual ~SocialServices_GetIdByName_args() throw();
  std::string username;

  _SocialServices_GetIdByName_args__isset __isset;

  void __set_username(const std::string& val);

  bool operator == (const SocialServices_GetIdByName_args & rhs) const
  {
    if (!(username == rhs.username))
      return false;
    return true;
  }
  bool operator != (const SocialServices_GetIdByName_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_GetIdByName_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialServices_GetIdByName_pargs {
 public:


  virtual ~SocialServices_GetIdByName_pargs() throw();
  const std::string* username;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_GetIdByName_result__isset {
  _SocialServices_GetIdByName_result__isset() : success(false) {}
  bool success :1;
} _SocialServices_GetIdByName_result__isset;

class SocialServices_GetIdByName_result {
 public:

  SocialServices_GetIdByName_result(const SocialServices_GetIdByName_result&);
  SocialServices_GetIdByName_result& operator=(const SocialServices_GetIdByName_result&);
  SocialServices_GetIdByName_result() : success(0) {
  }

  virtual ~SocialServices_GetIdByName_result() throw();
  int32_t success;

  _SocialServices_GetIdByName_result__isset __isset;

  void __set_success(const int32_t val);

  bool operator == (const SocialServices_GetIdByName_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const SocialServices_GetIdByName_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_GetIdByName_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_GetIdByName_presult__isset {
  _SocialServices_GetIdByName_presult__isset() : success(false) {}
  bool success :1;
} _SocialServices_GetIdByName_presult__isset;

class SocialServices_GetIdByName_presult {
 public:


  virtual ~SocialServices_GetIdByName_presult() throw();
  int32_t* success;

  _SocialServices_GetIdByName_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SocialServices_checkRequest_args__isset {
  _SocialServices_checkRequest_args__isset() : id(false) {}
  bool id :1;
} _SocialServices_checkRequest_args__isset;

class SocialServices_checkRequest_args {
 public:

  SocialServices_checkRequest_args(const SocialServices_checkRequest_args&);
  SocialServices_checkRequest_args& operator=(const SocialServices_checkRequest_args&);
  SocialServices_checkRequest_args() : id(0) {
  }

  virtual ~SocialServices_checkRequest_args() throw();
  int32_t id;

  _SocialServices_checkRequest_args__isset __isset;

  void __set_id(const int32_t val);

  bool operator == (const SocialServices_checkRequest_args & rhs) const
  {
    if (!(id == rhs.id))
      return false;
    return true;
  }
  bool operator != (const SocialServices_checkRequest_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_checkRequest_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialServices_checkRequest_pargs {
 public:


  virtual ~SocialServices_checkRequest_pargs() throw();
  const int32_t* id;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_checkRequest_result__isset {
  _SocialServices_checkRequest_result__isset() : success(false) {}
  bool success :1;
} _SocialServices_checkRequest_result__isset;

class SocialServices_checkRequest_result {
 public:

  SocialServices_checkRequest_result(const SocialServices_checkRequest_result&);
  SocialServices_checkRequest_result& operator=(const SocialServices_checkRequest_result&);
  SocialServices_checkRequest_result() {
  }

  virtual ~SocialServices_checkRequest_result() throw();
  pingResult success;

  _SocialServices_checkRequest_result__isset __isset;

  void __set_success(const pingResult& val);

  bool operator == (const SocialServices_checkRequest_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const SocialServices_checkRequest_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_checkRequest_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_checkRequest_presult__isset {
  _SocialServices_checkRequest_presult__isset() : success(false) {}
  bool success :1;
} _SocialServices_checkRequest_presult__isset;

class SocialServices_checkRequest_presult {
 public:


  virtual ~SocialServices_checkRequest_presult() throw();
  pingResult* success;

  _SocialServices_checkRequest_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SocialServices_addFriend_args__isset {
  _SocialServices_addFriend_args__isset() : request(false) {}
  bool request :1;
} _SocialServices_addFriend_args__isset;

class SocialServices_addFriend_args {
 public:

  SocialServices_addFriend_args(const SocialServices_addFriend_args&);
  SocialServices_addFriend_args& operator=(const SocialServices_addFriend_args&);
  SocialServices_addFriend_args() {
  }

  virtual ~SocialServices_addFriend_args() throw();
  FriendRequest request;

  _SocialServices_addFriend_args__isset __isset;

  void __set_request(const FriendRequest& val);

  bool operator == (const SocialServices_addFriend_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SocialServices_addFriend_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_addFriend_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialServices_addFriend_pargs {
 public:


  virtual ~SocialServices_addFriend_pargs() throw();
  const FriendRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_addFriend_result__isset {
  _SocialServices_addFriend_result__isset() : success(false) {}
  bool success :1;
} _SocialServices_addFriend_result__isset;

class SocialServices_addFriend_result {
 public:

  SocialServices_addFriend_result(const SocialServices_addFriend_result&);
  SocialServices_addFriend_result& operator=(const SocialServices_addFriend_result&);
  SocialServices_addFriend_result() : success((ErrorCode::type)0) {
  }

  virtual ~SocialServices_addFriend_result() throw();
  ErrorCode::type success;

  _SocialServices_addFriend_result__isset __isset;

  void __set_success(const ErrorCode::type val);

  bool operator == (const SocialServices_addFriend_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const SocialServices_addFriend_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_addFriend_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_addFriend_presult__isset {
  _SocialServices_addFriend_presult__isset() : success(false) {}
  bool success :1;
} _SocialServices_addFriend_presult__isset;

class SocialServices_addFriend_presult {
 public:


  virtual ~SocialServices_addFriend_presult() throw();
  ErrorCode::type* success;

  _SocialServices_addFriend_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SocialServices_acceptRequest_args__isset {
  _SocialServices_acceptRequest_args__isset() : curId(false), requestId(false) {}
  bool curId :1;
  bool requestId :1;
} _SocialServices_acceptRequest_args__isset;

class SocialServices_acceptRequest_args {
 public:

  SocialServices_acceptRequest_args(const SocialServices_acceptRequest_args&);
  SocialServices_acceptRequest_args& operator=(const SocialServices_acceptRequest_args&);
  SocialServices_acceptRequest_args() : curId(0), requestId(0) {
  }

  virtual ~SocialServices_acceptRequest_args() throw();
  int32_t curId;
  int32_t requestId;

  _SocialServices_acceptRequest_args__isset __isset;

  void __set_curId(const int32_t val);

  void __set_requestId(const int32_t val);

  bool operator == (const SocialServices_acceptRequest_args & rhs) const
  {
    if (!(curId == rhs.curId))
      return false;
    if (!(requestId == rhs.requestId))
      return false;
    return true;
  }
  bool operator != (const SocialServices_acceptRequest_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_acceptRequest_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialServices_acceptRequest_pargs {
 public:


  virtual ~SocialServices_acceptRequest_pargs() throw();
  const int32_t* curId;
  const int32_t* requestId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_acceptRequest_result__isset {
  _SocialServices_acceptRequest_result__isset() : success(false) {}
  bool success :1;
} _SocialServices_acceptRequest_result__isset;

class SocialServices_acceptRequest_result {
 public:

  SocialServices_acceptRequest_result(const SocialServices_acceptRequest_result&);
  SocialServices_acceptRequest_result& operator=(const SocialServices_acceptRequest_result&);
  SocialServices_acceptRequest_result() : success((ErrorCode::type)0) {
  }

  virtual ~SocialServices_acceptRequest_result() throw();
  ErrorCode::type success;

  _SocialServices_acceptRequest_result__isset __isset;

  void __set_success(const ErrorCode::type val);

  bool operator == (const SocialServices_acceptRequest_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const SocialServices_acceptRequest_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_acceptRequest_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_acceptRequest_presult__isset {
  _SocialServices_acceptRequest_presult__isset() : success(false) {}
  bool success :1;
} _SocialServices_acceptRequest_presult__isset;

class SocialServices_acceptRequest_presult {
 public:


  virtual ~SocialServices_acceptRequest_presult() throw();
  ErrorCode::type* success;

  _SocialServices_acceptRequest_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SocialServices_declineRequest_args__isset {
  _SocialServices_declineRequest_args__isset() : curId(false), requestId(false) {}
  bool curId :1;
  bool requestId :1;
} _SocialServices_declineRequest_args__isset;

class SocialServices_declineRequest_args {
 public:

  SocialServices_declineRequest_args(const SocialServices_declineRequest_args&);
  SocialServices_declineRequest_args& operator=(const SocialServices_declineRequest_args&);
  SocialServices_declineRequest_args() : curId(0), requestId(0) {
  }

  virtual ~SocialServices_declineRequest_args() throw();
  int32_t curId;
  int32_t requestId;

  _SocialServices_declineRequest_args__isset __isset;

  void __set_curId(const int32_t val);

  void __set_requestId(const int32_t val);

  bool operator == (const SocialServices_declineRequest_args & rhs) const
  {
    if (!(curId == rhs.curId))
      return false;
    if (!(requestId == rhs.requestId))
      return false;
    return true;
  }
  bool operator != (const SocialServices_declineRequest_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_declineRequest_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialServices_declineRequest_pargs {
 public:


  virtual ~SocialServices_declineRequest_pargs() throw();
  const int32_t* curId;
  const int32_t* requestId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_declineRequest_result__isset {
  _SocialServices_declineRequest_result__isset() : success(false) {}
  bool success :1;
} _SocialServices_declineRequest_result__isset;

class SocialServices_declineRequest_result {
 public:

  SocialServices_declineRequest_result(const SocialServices_declineRequest_result&);
  SocialServices_declineRequest_result& operator=(const SocialServices_declineRequest_result&);
  SocialServices_declineRequest_result() : success((ErrorCode::type)0) {
  }

  virtual ~SocialServices_declineRequest_result() throw();
  ErrorCode::type success;

  _SocialServices_declineRequest_result__isset __isset;

  void __set_success(const ErrorCode::type val);

  bool operator == (const SocialServices_declineRequest_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const SocialServices_declineRequest_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_declineRequest_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_declineRequest_presult__isset {
  _SocialServices_declineRequest_presult__isset() : success(false) {}
  bool success :1;
} _SocialServices_declineRequest_presult__isset;

class SocialServices_declineRequest_presult {
 public:


  virtual ~SocialServices_declineRequest_presult() throw();
  ErrorCode::type* success;

  _SocialServices_declineRequest_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SocialServices_removeFriend_args__isset {
  _SocialServices_removeFriend_args__isset() : curId(false), friendId(false) {}
  bool curId :1;
  bool friendId :1;
} _SocialServices_removeFriend_args__isset;

class SocialServices_removeFriend_args {
 public:

  SocialServices_removeFriend_args(const SocialServices_removeFriend_args&);
  SocialServices_removeFriend_args& operator=(const SocialServices_removeFriend_args&);
  SocialServices_removeFriend_args() : curId(0), friendId(0) {
  }

  virtual ~SocialServices_removeFriend_args() throw();
  int32_t curId;
  int32_t friendId;

  _SocialServices_removeFriend_args__isset __isset;

  void __set_curId(const int32_t val);

  void __set_friendId(const int32_t val);

  bool operator == (const SocialServices_removeFriend_args & rhs) const
  {
    if (!(curId == rhs.curId))
      return false;
    if (!(friendId == rhs.friendId))
      return false;
    return true;
  }
  bool operator != (const SocialServices_removeFriend_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_removeFriend_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialServices_removeFriend_pargs {
 public:


  virtual ~SocialServices_removeFriend_pargs() throw();
  const int32_t* curId;
  const int32_t* friendId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_removeFriend_result__isset {
  _SocialServices_removeFriend_result__isset() : success(false) {}
  bool success :1;
} _SocialServices_removeFriend_result__isset;

class SocialServices_removeFriend_result {
 public:

  SocialServices_removeFriend_result(const SocialServices_removeFriend_result&);
  SocialServices_removeFriend_result& operator=(const SocialServices_removeFriend_result&);
  SocialServices_removeFriend_result() : success((ErrorCode::type)0) {
  }

  virtual ~SocialServices_removeFriend_result() throw();
  ErrorCode::type success;

  _SocialServices_removeFriend_result__isset __isset;

  void __set_success(const ErrorCode::type val);

  bool operator == (const SocialServices_removeFriend_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const SocialServices_removeFriend_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_removeFriend_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_removeFriend_presult__isset {
  _SocialServices_removeFriend_presult__isset() : success(false) {}
  bool success :1;
} _SocialServices_removeFriend_presult__isset;

class SocialServices_removeFriend_presult {
 public:


  virtual ~SocialServices_removeFriend_presult() throw();
  ErrorCode::type* success;

  _SocialServices_removeFriend_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SocialServices_viewFriendList_args__isset {
  _SocialServices_viewFriendList_args__isset() : id(false), index(false), size(false) {}
  bool id :1;
  bool index :1;
  bool size :1;
} _SocialServices_viewFriendList_args__isset;

class SocialServices_viewFriendList_args {
 public:

  SocialServices_viewFriendList_args(const SocialServices_viewFriendList_args&);
  SocialServices_viewFriendList_args& operator=(const SocialServices_viewFriendList_args&);
  SocialServices_viewFriendList_args() : id(0), index(0), size(0) {
  }

  virtual ~SocialServices_viewFriendList_args() throw();
  int32_t id;
  int32_t index;
  int32_t size;

  _SocialServices_viewFriendList_args__isset __isset;

  void __set_id(const int32_t val);

  void __set_index(const int32_t val);

  void __set_size(const int32_t val);

  bool operator == (const SocialServices_viewFriendList_args & rhs) const
  {
    if (!(id == rhs.id))
      return false;
    if (!(index == rhs.index))
      return false;
    if (!(size == rhs.size))
      return false;
    return true;
  }
  bool operator != (const SocialServices_viewFriendList_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_viewFriendList_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialServices_viewFriendList_pargs {
 public:


  virtual ~SocialServices_viewFriendList_pargs() throw();
  const int32_t* id;
  const int32_t* index;
  const int32_t* size;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_viewFriendList_result__isset {
  _SocialServices_viewFriendList_result__isset() : success(false) {}
  bool success :1;
} _SocialServices_viewFriendList_result__isset;

class SocialServices_viewFriendList_result {
 public:

  SocialServices_viewFriendList_result(const SocialServices_viewFriendList_result&);
  SocialServices_viewFriendList_result& operator=(const SocialServices_viewFriendList_result&);
  SocialServices_viewFriendList_result() {
  }

  virtual ~SocialServices_viewFriendList_result() throw();
  listFriendResult success;

  _SocialServices_viewFriendList_result__isset __isset;

  void __set_success(const listFriendResult& val);

  bool operator == (const SocialServices_viewFriendList_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const SocialServices_viewFriendList_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialServices_viewFriendList_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialServices_viewFriendList_presult__isset {
  _SocialServices_viewFriendList_presult__isset() : success(false) {}
  bool success :1;
} _SocialServices_viewFriendList_presult__isset;

class SocialServices_viewFriendList_presult {
 public:


  virtual ~SocialServices_viewFriendList_presult() throw();
  listFriendResult* success;

  _SocialServices_viewFriendList_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

class SocialServicesClient : virtual public SocialServicesIf {
 public:
  SocialServicesClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
    setProtocol(prot);
  }
  SocialServicesClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, boost::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    setProtocol(iprot,oprot);
  }
 private:
  void setProtocol(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
  setProtocol(prot,prot);
  }
  void setProtocol(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, boost::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    piprot_=iprot;
    poprot_=oprot;
    iprot_ = iprot.get();
    oprot_ = oprot.get();
  }
 public:
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getInputProtocol() {
    return piprot_;
  }
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getOutputProtocol() {
    return poprot_;
  }
  int32_t Login(const std::string& username, const std::string& password);
  void send_Login(const std::string& username, const std::string& password);
  int32_t recv_Login();
  ErrorCode::type Logout(const int32_t userId);
  void send_Logout(const int32_t userId);
  ErrorCode::type recv_Logout();
  void CreateProfile(CreateUserResult& _return, const UserProfile& profile);
  void send_CreateProfile(const UserProfile& profile);
  void recv_CreateProfile(CreateUserResult& _return);
  void GetProfile(GetUserResult& _return, const int32_t userId);
  void send_GetProfile(const int32_t userId);
  void recv_GetProfile(GetUserResult& _return);
  ErrorCode::type UpdateProfile(const UserProfile& profile, const int32_t userId);
  void send_UpdateProfile(const UserProfile& profile, const int32_t userId);
  ErrorCode::type recv_UpdateProfile();
  ErrorCode::type DeleteProfile(const int32_t userId);
  void send_DeleteProfile(const int32_t userId);
  ErrorCode::type recv_DeleteProfile();
  void ansyCreateProfile(CreateUserResult& _return, const UserProfile& profile);
  void send_ansyCreateProfile(const UserProfile& profile);
  void recv_ansyCreateProfile(CreateUserResult& _return);
  ErrorCode::type ansyUpdateProfile(const UserProfile& profile, const int32_t userId);
  void send_ansyUpdateProfile(const UserProfile& profile, const int32_t userId);
  ErrorCode::type recv_ansyUpdateProfile();
  ErrorCode::type ansyDeleteProfile(const int32_t userId);
  void send_ansyDeleteProfile(const int32_t userId);
  ErrorCode::type recv_ansyDeleteProfile();
  void getList(ListProfileResult& _return, const std::vector<int32_t> & ids);
  void send_getList(const std::vector<int32_t> & ids);
  void recv_getList(ListProfileResult& _return);
  int32_t GetIdByName(const std::string& username);
  void send_GetIdByName(const std::string& username);
  int32_t recv_GetIdByName();
  void checkRequest(pingResult& _return, const int32_t id);
  void send_checkRequest(const int32_t id);
  void recv_checkRequest(pingResult& _return);
  ErrorCode::type addFriend(const FriendRequest& request);
  void send_addFriend(const FriendRequest& request);
  ErrorCode::type recv_addFriend();
  ErrorCode::type acceptRequest(const int32_t curId, const int32_t requestId);
  void send_acceptRequest(const int32_t curId, const int32_t requestId);
  ErrorCode::type recv_acceptRequest();
  ErrorCode::type declineRequest(const int32_t curId, const int32_t requestId);
  void send_declineRequest(const int32_t curId, const int32_t requestId);
  ErrorCode::type recv_declineRequest();
  ErrorCode::type removeFriend(const int32_t curId, const int32_t friendId);
  void send_removeFriend(const int32_t curId, const int32_t friendId);
  ErrorCode::type recv_removeFriend();
  void viewFriendList(listFriendResult& _return, const int32_t id, const int32_t index, const int32_t size);
  void send_viewFriendList(const int32_t id, const int32_t index, const int32_t size);
  void recv_viewFriendList(listFriendResult& _return);
 protected:
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> piprot_;
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> poprot_;
  ::apache::thrift::protocol::TProtocol* iprot_;
  ::apache::thrift::protocol::TProtocol* oprot_;
};

class SocialServicesProcessor : public ::apache::thrift::TDispatchProcessor {
 protected:
  boost::shared_ptr<SocialServicesIf> iface_;
  virtual bool dispatchCall(::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, const std::string& fname, int32_t seqid, void* callContext);
 private:
  typedef  void (SocialServicesProcessor::*ProcessFunction)(int32_t, ::apache::thrift::protocol::TProtocol*, ::apache::thrift::protocol::TProtocol*, void*);
  typedef std::map<std::string, ProcessFunction> ProcessMap;
  ProcessMap processMap_;
  void process_Login(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_Logout(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_CreateProfile(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_GetProfile(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_UpdateProfile(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_DeleteProfile(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_ansyCreateProfile(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_ansyUpdateProfile(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_ansyDeleteProfile(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getList(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_GetIdByName(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_checkRequest(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_addFriend(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_acceptRequest(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_declineRequest(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_removeFriend(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_viewFriendList(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
 public:
  SocialServicesProcessor(boost::shared_ptr<SocialServicesIf> iface) :
    iface_(iface) {
    processMap_["Login"] = &SocialServicesProcessor::process_Login;
    processMap_["Logout"] = &SocialServicesProcessor::process_Logout;
    processMap_["CreateProfile"] = &SocialServicesProcessor::process_CreateProfile;
    processMap_["GetProfile"] = &SocialServicesProcessor::process_GetProfile;
    processMap_["UpdateProfile"] = &SocialServicesProcessor::process_UpdateProfile;
    processMap_["DeleteProfile"] = &SocialServicesProcessor::process_DeleteProfile;
    processMap_["ansyCreateProfile"] = &SocialServicesProcessor::process_ansyCreateProfile;
    processMap_["ansyUpdateProfile"] = &SocialServicesProcessor::process_ansyUpdateProfile;
    processMap_["ansyDeleteProfile"] = &SocialServicesProcessor::process_ansyDeleteProfile;
    processMap_["getList"] = &SocialServicesProcessor::process_getList;
    processMap_["GetIdByName"] = &SocialServicesProcessor::process_GetIdByName;
    processMap_["checkRequest"] = &SocialServicesProcessor::process_checkRequest;
    processMap_["addFriend"] = &SocialServicesProcessor::process_addFriend;
    processMap_["acceptRequest"] = &SocialServicesProcessor::process_acceptRequest;
    processMap_["declineRequest"] = &SocialServicesProcessor::process_declineRequest;
    processMap_["removeFriend"] = &SocialServicesProcessor::process_removeFriend;
    processMap_["viewFriendList"] = &SocialServicesProcessor::process_viewFriendList;
  }

  virtual ~SocialServicesProcessor() {}
};

class SocialServicesProcessorFactory : public ::apache::thrift::TProcessorFactory {
 public:
  SocialServicesProcessorFactory(const ::boost::shared_ptr< SocialServicesIfFactory >& handlerFactory) :
      handlerFactory_(handlerFactory) {}

  ::boost::shared_ptr< ::apache::thrift::TProcessor > getProcessor(const ::apache::thrift::TConnectionInfo& connInfo);

 protected:
  ::boost::shared_ptr< SocialServicesIfFactory > handlerFactory_;
};

class SocialServicesMultiface : virtual public SocialServicesIf {
 public:
  SocialServicesMultiface(std::vector<boost::shared_ptr<SocialServicesIf> >& ifaces) : ifaces_(ifaces) {
  }
  virtual ~SocialServicesMultiface() {}
 protected:
  std::vector<boost::shared_ptr<SocialServicesIf> > ifaces_;
  SocialServicesMultiface() {}
  void add(boost::shared_ptr<SocialServicesIf> iface) {
    ifaces_.push_back(iface);
  }
 public:
  int32_t Login(const std::string& username, const std::string& password) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->Login(username, password);
    }
    return ifaces_[i]->Login(username, password);
  }

  ErrorCode::type Logout(const int32_t userId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->Logout(userId);
    }
    return ifaces_[i]->Logout(userId);
  }

  void CreateProfile(CreateUserResult& _return, const UserProfile& profile) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->CreateProfile(_return, profile);
    }
    ifaces_[i]->CreateProfile(_return, profile);
    return;
  }

  void GetProfile(GetUserResult& _return, const int32_t userId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->GetProfile(_return, userId);
    }
    ifaces_[i]->GetProfile(_return, userId);
    return;
  }

  ErrorCode::type UpdateProfile(const UserProfile& profile, const int32_t userId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->UpdateProfile(profile, userId);
    }
    return ifaces_[i]->UpdateProfile(profile, userId);
  }

  ErrorCode::type DeleteProfile(const int32_t userId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->DeleteProfile(userId);
    }
    return ifaces_[i]->DeleteProfile(userId);
  }

  void ansyCreateProfile(CreateUserResult& _return, const UserProfile& profile) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->ansyCreateProfile(_return, profile);
    }
    ifaces_[i]->ansyCreateProfile(_return, profile);
    return;
  }

  ErrorCode::type ansyUpdateProfile(const UserProfile& profile, const int32_t userId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->ansyUpdateProfile(profile, userId);
    }
    return ifaces_[i]->ansyUpdateProfile(profile, userId);
  }

  ErrorCode::type ansyDeleteProfile(const int32_t userId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->ansyDeleteProfile(userId);
    }
    return ifaces_[i]->ansyDeleteProfile(userId);
  }

  void getList(ListProfileResult& _return, const std::vector<int32_t> & ids) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getList(_return, ids);
    }
    ifaces_[i]->getList(_return, ids);
    return;
  }

  int32_t GetIdByName(const std::string& username) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->GetIdByName(username);
    }
    return ifaces_[i]->GetIdByName(username);
  }

  void checkRequest(pingResult& _return, const int32_t id) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->checkRequest(_return, id);
    }
    ifaces_[i]->checkRequest(_return, id);
    return;
  }

  ErrorCode::type addFriend(const FriendRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->addFriend(request);
    }
    return ifaces_[i]->addFriend(request);
  }

  ErrorCode::type acceptRequest(const int32_t curId, const int32_t requestId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->acceptRequest(curId, requestId);
    }
    return ifaces_[i]->acceptRequest(curId, requestId);
  }

  ErrorCode::type declineRequest(const int32_t curId, const int32_t requestId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->declineRequest(curId, requestId);
    }
    return ifaces_[i]->declineRequest(curId, requestId);
  }

  ErrorCode::type removeFriend(const int32_t curId, const int32_t friendId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->removeFriend(curId, friendId);
    }
    return ifaces_[i]->removeFriend(curId, friendId);
  }

  void viewFriendList(listFriendResult& _return, const int32_t id, const int32_t index, const int32_t size) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->viewFriendList(_return, id, index, size);
    }
    ifaces_[i]->viewFriendList(_return, id, index, size);
    return;
  }

};

// The 'concurrent' client is a thread safe client that correctly handles
// out of order responses.  It is slower than the regular client, so should
// only be used when you need to share a connection among multiple threads
class SocialServicesConcurrentClient : virtual public SocialServicesIf {
 public:
  SocialServicesConcurrentClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
    setProtocol(prot);
  }
  SocialServicesConcurrentClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, boost::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    setProtocol(iprot,oprot);
  }
 private:
  void setProtocol(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
  setProtocol(prot,prot);
  }
  void setProtocol(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, boost::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    piprot_=iprot;
    poprot_=oprot;
    iprot_ = iprot.get();
    oprot_ = oprot.get();
  }
 public:
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getInputProtocol() {
    return piprot_;
  }
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getOutputProtocol() {
    return poprot_;
  }
  int32_t Login(const std::string& username, const std::string& password);
  int32_t send_Login(const std::string& username, const std::string& password);
  int32_t recv_Login(const int32_t seqid);
  ErrorCode::type Logout(const int32_t userId);
  int32_t send_Logout(const int32_t userId);
  ErrorCode::type recv_Logout(const int32_t seqid);
  void CreateProfile(CreateUserResult& _return, const UserProfile& profile);
  int32_t send_CreateProfile(const UserProfile& profile);
  void recv_CreateProfile(CreateUserResult& _return, const int32_t seqid);
  void GetProfile(GetUserResult& _return, const int32_t userId);
  int32_t send_GetProfile(const int32_t userId);
  void recv_GetProfile(GetUserResult& _return, const int32_t seqid);
  ErrorCode::type UpdateProfile(const UserProfile& profile, const int32_t userId);
  int32_t send_UpdateProfile(const UserProfile& profile, const int32_t userId);
  ErrorCode::type recv_UpdateProfile(const int32_t seqid);
  ErrorCode::type DeleteProfile(const int32_t userId);
  int32_t send_DeleteProfile(const int32_t userId);
  ErrorCode::type recv_DeleteProfile(const int32_t seqid);
  void ansyCreateProfile(CreateUserResult& _return, const UserProfile& profile);
  int32_t send_ansyCreateProfile(const UserProfile& profile);
  void recv_ansyCreateProfile(CreateUserResult& _return, const int32_t seqid);
  ErrorCode::type ansyUpdateProfile(const UserProfile& profile, const int32_t userId);
  int32_t send_ansyUpdateProfile(const UserProfile& profile, const int32_t userId);
  ErrorCode::type recv_ansyUpdateProfile(const int32_t seqid);
  ErrorCode::type ansyDeleteProfile(const int32_t userId);
  int32_t send_ansyDeleteProfile(const int32_t userId);
  ErrorCode::type recv_ansyDeleteProfile(const int32_t seqid);
  void getList(ListProfileResult& _return, const std::vector<int32_t> & ids);
  int32_t send_getList(const std::vector<int32_t> & ids);
  void recv_getList(ListProfileResult& _return, const int32_t seqid);
  int32_t GetIdByName(const std::string& username);
  int32_t send_GetIdByName(const std::string& username);
  int32_t recv_GetIdByName(const int32_t seqid);
  void checkRequest(pingResult& _return, const int32_t id);
  int32_t send_checkRequest(const int32_t id);
  void recv_checkRequest(pingResult& _return, const int32_t seqid);
  ErrorCode::type addFriend(const FriendRequest& request);
  int32_t send_addFriend(const FriendRequest& request);
  ErrorCode::type recv_addFriend(const int32_t seqid);
  ErrorCode::type acceptRequest(const int32_t curId, const int32_t requestId);
  int32_t send_acceptRequest(const int32_t curId, const int32_t requestId);
  ErrorCode::type recv_acceptRequest(const int32_t seqid);
  ErrorCode::type declineRequest(const int32_t curId, const int32_t requestId);
  int32_t send_declineRequest(const int32_t curId, const int32_t requestId);
  ErrorCode::type recv_declineRequest(const int32_t seqid);
  ErrorCode::type removeFriend(const int32_t curId, const int32_t friendId);
  int32_t send_removeFriend(const int32_t curId, const int32_t friendId);
  ErrorCode::type recv_removeFriend(const int32_t seqid);
  void viewFriendList(listFriendResult& _return, const int32_t id, const int32_t index, const int32_t size);
  int32_t send_viewFriendList(const int32_t id, const int32_t index, const int32_t size);
  void recv_viewFriendList(listFriendResult& _return, const int32_t seqid);
 protected:
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> piprot_;
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> poprot_;
  ::apache::thrift::protocol::TProtocol* iprot_;
  ::apache::thrift::protocol::TProtocol* oprot_;
  ::apache::thrift::async::TConcurrentClientSyncInfo sync_;
};

#ifdef _WIN32
  #pragma warning( pop )
#endif



#endif
